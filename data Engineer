Lenguaje: python
Conda: Gestor de paquetes y un sistema de gestión de entornos. CUenta con canales donde estan ubicadas las librerías/paquetes para su instalación.
Anaconda: es conda pero suma cositas. Esta orientado a simplificar el despliegue y administración de los paquetes de software. Facilita el uso de varias plataformas por ejemplo como visual studio code, jupyter, jupyterlab
Las librerías se obtienen por conda o pip, que buscan en archivos jerarquicamente.


CREAR ENTORNOS VIRTUALES 
me posiciono en la carpeta donde quiero tener el entorno
tengo que tener instalado virtualenv en python (una libreria. sino es "pip install virtualenv")
comando: "python3 -m venv p2" (se va a llamar "p2" el proyecto/entorno, y lo estoy creando). o sino tambien "virtualenv env"
comando para activar el entorno virtual, estando en la carpeta del entorno creado,p2 mi caso: 
linux: source bin/activate 
 windows: ".\Scripts\activate" estando dentro del entorno). El comando en windows para activar: "Scripts\activate"
 --ME VOY A DAR CUENTA SI APARECE EN EL COMANDO (p2) al inicio!!. 
 
 Y de aca voy a querer correr un .py o un .ipynb:
- .py: 
  corro el script phyton: Directorio >python nombre_archivo.py
- .ipynb:
  Dentro del enviroment, necesito instalar la librería que cree un kernel para tratar a los archivos .ipynb:
  "ipython kernel install --user --name=venv", para visualizar los kerneles
   "pip install ipykernel", esto para crear un kernel dentro del ambiente
   "python -m ipykernel install --user --name ENVNAME --display-name nombre kernel
  Una vez instalado, lo debería ver como opción para selecciónar como kernel
  
  
  Una vez dentro del ambiente, puedo ejecutar condas comandos desde el cmd, o ir a jupyterlab/jupyter o Visual studio, seleccionar el kernel creado y configurarlo a gusto.
  Para modificar el python, es desde los comandos. ejemplo:conda install python=3.6
  
    con "deactivate" sale del entorno!

----  
OTRA FORMA DE CREAR AMBIENTES
"conda create -n tutorial python=3.7"

conda activate tutorial
conda deactivate

 ipykernel permite usar el enviroment en jupyter: "pip install ipykernel"
 we can link a kernel to our virtual environment con este comando: python -m ipykernel install --user --name=tutorial
 Cuando linkeas, despues no necesitas activar el ambiente!! simplemente usando el kernel, ya esta ok!!!
-----
ver los kernels instalados: jupyter kernelspec list
Eliminar kernel "tutorial": jupyter kernelspec remove tutorial
ver ambientes instalados: conda env list
Eliminar ambientes"tutorial": conda env remove -n tutorial




COMPUTADORA
ROM: 1 tera  (Memoria de computadora, relacionado con datalake.barato e infinito
RAM: 8 a 32GB buena performance. memoria volatil de corto plazo para procesamiento
PROCESADOR: CPU (trabaja más en seria) o GPU (trabaja más en paralelo) según arquitectura. Normalmente tienen 1 cluster/servidor/nodo master con otros nodos/nucleos/workers. Cada nodo tiene un core(procesador) que la suman hacen  y una memoria RAM específica que se utilizan según necesidades optimizadamente. 
Cada nodo se prende, según dicen, de forma optimizada y usando lo minimo indispensable.


PARA TENER ACCESO A REDES DE EMPRESAS (DONDE TIENEN CIERTOS PROGRAMAS, APLICACIONES Y DATOS), SE NECESITA contar con UN IP publica QUE ESTE DENTRO DEL RANGO DE LAS IPs DE LA RED. Varios caminos:

VPN. que biwares tenga una VPN tal que cuando nos conectamos, la VPN transforma la IP publica nuestra, en una IP valida para esa red en u proceso de encriptado o enmascarado (hay varios softwares que permiten esto. entre los más usados, Forticlient o OpenVPN). Proxy hace algo parecido pero no a nivel SO como la VPN, sino a nivel aplicación y sin software.
Tener acceso con credenciales a una maquina virtual/instancia (con las herramientas Virtual Box o VMware), la cual si tenga una IP dentro del rango aceptado por la red. Esto puede estar de forma local (ocupa 16gb por ejemplo) o en la nube, pudiendo estar siempre prendida.
Hacer una excepeción configurando el firewall, donde se solicita que las IPs nuestras, la de mi compu, tenga acceso a su red. (es lo más peliloso)

Además de todo esto, hay algunas redes privadas que tienen otra capa de seguridad y necesitan un tunnel (SSH). kerberos tambien es algo de esto y los proxy.


IP publica es la del modem a la que estoy conectado, y la que se actualiza cuando se resetea. IP privada es la que me diferencia de los demas diapositivos dentro de mi red (modem)


Luego, si me quiero conectar a la base de datos, necesito un gestor de base de datos como dbeaver y saber:
host:
puerto:
database: 
usuario y contraseña (Las credenciales)
tipo de base de datos: (si es mysql, azure, redshift,etc. cada uno de estos tiene diferentes drivers, que son quienes funcionan de interpretador, propios de cada tecnología)
